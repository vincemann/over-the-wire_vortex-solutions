set follow-fork-mode child
break main
r 
disassemble main
b *0x0000555555555193
del
break main
c
q
disassemble main
q
disassemble main
b execve
r
si
disassemble main
break main
set follow-fork-mode child
c
disassemble main
show env
argv
argc 
x/200wx 0xffffcc94
disassemble main
i r esp
x/200wx 0xffffde28
x 0xf7de4e46
x 0xffffded4
x 0xffffded8
x/s 0xffffdfb9
x 0xffffded4
x 0xffffde64
x/1wx 0xffffde64
x 0xffffded8
0xffffdfb9
x/s 0xffffdfb9
x/1wx 0xffffded8
x 0xffffdfb9
x 0xffffde64
x 0xffffded8
x/10wx 0xffffdfb9
x/s 0x73746365
q
disassemble main
b *0x0000000000001193
r
break main
c
i r eip
set follow-fork-mode child
ii b
i b
r
del
b main
c
show env
i r eip
i r rip
disassemble main
del
break main
c
q
break execve
set follow-fork-mode child

r
si
del
break main
c
disassemble main
q
set follow-fork-mode child

break execve
r
si
del
break main
c
disassemble main
x/100wx $esp
x 0xffffded8
x/20wx 0xffffdfb9 
x 0xffffde64
vvmap
vmmap
find 0xfffdd000,0xffffe000,"CCCC"

find 0xfffdd000,0xffffe000,"C"

find 0xfffdd000,0xffffe000,"AAAA"

find 0xfffdd000,0xffffe000,"AAA"

find 0xfffdd000,0xffffe000,"BB"

find 0xffffdfb9,0xffffe000,"B"

find 0xffffdfb9,0xffffe000,"BB"

find 0xffffdfb9,0xffffe000,"4242"

find 0x8048000,0xffffe000,"BB"

find 0x8048000,0xffffe000,"B"

x 0xffffdfb9
x/3000wx $esp
q
q
q
q
q
set follow-fork-mode child

break execve
r
si
del
break main
c
q
gil main
x/20wx Â§esp
x/20wx $esp
x 0xffffded8
x/20wx 0xffffdfb6
q
x/20wx $esp
x $esp+0x10
x *$esp+0x10
set var = x $esp+0x10
x $esp+0x10
*(x $esp+0x10)
x $esp+0x10
x/20wx 0xffffded8
x 0xffffded4
x 0xffffde64
x 0xffffde74
q
x/20 wx $esp
x/20wx $esp
x 0xffffded8
x/20wx 0xffffdfb6
q
x $esp+0x10
x/20wx 0xffffded8
x/20wx 0xffffdfb6
q
q
q
q
q
q
q
q
q
q
q
q
q
argv
env
gil main
b *0x0804871f
break exit
c
x/20wx **$var
q
q
q
q
q
q
gil vuln
gil main
c
gil vuln 
disassemble 0x8048420
x 0x804a010
disassemble 0x8048410
q
